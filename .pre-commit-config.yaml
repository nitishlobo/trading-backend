default_language_version:
    python: python3.11
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: check-ast
        description: check python files parse as valid python
    -   id: check-builtin-literals
        description: requires literal syntax for initializing empty/zero python builtin types (e.g. list() to [], dict() to {})
    -   id: check-case-conflict
        description: checks for file name conflicts in case-insensitive filesystems
    -   id: check-docstring-first
        description: prevents common error of defining a docstring after code
    -   id: check-executables-have-shebangs
        description: ensures non-binary executables have a shebang (e.g. `#!/bin/bash`)
        exclude: ^(.*\.geojson)$
    -   id: check-json
        description: checks json files for parseable syntax
    -   id: check-shebang-scripts-are-executable
        description: ensures non-binary files with a shebang are executable
    -   id: check-merge-conflict
        description: checks for merge conflict strings in files (e.g. <<<<<<< HEAD)
    -   id: check-toml
        description: checks toml files for parseable syntax
    -   id: check-xml
        description: checks xml files for parseable syntax
    -   id: check-yaml
        description: checks yaml files for parseable syntax
        args: ['--unsafe']  # --unsafe = accept tags (e.g.: !Ref, !GetAtt, !Sub, !Join, etc..)
    -   id: debug-statements
        description: checks for debugger imports and py37+ `breakpoint()` calls
    -   id: detect-private-key
        description: checks for private keys (e.g. b'-----BEGIN RSA PRIVATE...')
    -   id: end-of-file-fixer
        description: ensures that files are either empty, or end with one newline
    -   id: mixed-line-ending
        description: replaces line endings with the UNIX 'lf' character (i.e. CRLF to LF).
        args: ['--fix=lf']
    -   id: name-tests-test
        description: verifies test files are named consistently (i.e. test_filename)
        args: ['--pytest-test-first']
# TODO: enable when there are more contributors to the project
# -   id: no-commit-to-branch
#     name: protect master/main branches from direct commits
    -   id: pretty-format-json
        description: sets a standard for formatting json files
        args: ['--autofix']
    -   id: requirements-txt-fixer
        description: sorts entries alphabetically in requirements.txt
    -   id: trailing-whitespace
        description: trims trailing whitespace
        args: ['--markdown-linebreak-ext=md,rst']
        exclude: ^(.*\.csv)$
-   repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
    -   id: python-check-blanket-noqa
        description: "enforce `# noqa` annotations always have specific codes (e.g. `# noqa: F401`). Used for ruff/flake8."
    -   id: python-check-blanket-type-ignore
        description: "enforce `# type: ignore` annotations always have specific codes (e.g. `# type: ignore[attr-defined]`). Used for mypy."
    -   id: python-check-mock-methods
        description: prevents common mistakes of `assert mck.not_called()`, `assert mck.called_once_with(...)` and `mck.assert_called`
    -   id: python-no-eval
        description: checks for `eval()` built-in function
    -   id: python-no-log-warn
        description: checks for deprecated `.warn()` method of python loggers
    -   id: python-use-type-annotations
        description: enforces python3.6+ type annotations are used instead of type comments
    -   id: rst-directive-colons
        description: detects mistake of rst directive not ending with double colon or space before the double colon
    -   id: rst-inline-touching-normal
        description: detects mistake of inline code touching normal text in rst
    -   id: text-unicode-replacement-char
        description: forbids files which have a UTF-8 Unicode replacement character
-   repo: https://github.com/asottile/pyupgrade
    rev: v3.10.1
    hooks:
    -   id: pyupgrade
        description: automatically upgrades syntax as per newer python versions
        args: ['--py39-plus']
-   repo: https://github.com/pre-commit/mirrors-autopep8
    rev: v2.0.2
    hooks:
    -   id: autopep8
        description: automatically formats code to conform to the PEP 8 style guide
        # FIXME: autopep8 isn't picking up the global pyproject.toml.
        args: ["--ignore=E226,E24,W50,W690,E203", "--in-place"]
- repo: https://github.com/charliermarsh/ruff-pre-commit
  rev: "v0.0.283"
  hooks:
    -   id: ruff
        description: collection of several linting plugins (isort, flake8, mccabe, etc...)
        args: [--fix, --exit-non-zero-on-fix]
# TODO: configure mypy and fix errors in repo
# -   repo: https://github.com/pre-commit/mirrors-mypy
#     rev: v1.1.1
#     hooks:
#     -   id: mypy
#         description: static type checker for python
-   repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
    -   id: black
        description: opinionated code formatter
-   repo: https://github.com/asottile/setup-cfg-fmt
    rev: v2.4.0
    hooks:
    -   id: setup-cfg-fmt
        description: applies consistent format to `setup.cfg` files
# TODO: configure for future use
# -   repo: https://github.com/Lucas-C/pre-commit-hooks-safety
#     rev: v1.3.1
#     hooks:
#     -   id: python-safety-dependencies-check
#         description: checks python dependencies against safety-db for vulnerabilities
#         args: ["--disable-telemetry", "--short-report"]
-   repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
    -   id: bandit
        description: finds common security issues in Python code
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]
-   repo: https://github.com/pycqa/pylint
    rev: v3.0.0a6
    hooks:
    -   id: pylint
        description: static code analyser - checks for errors, code smells, enforce coding standard, and make suggestions about refactoring code
        additional_dependencies: ["pylint-pydantic"]
